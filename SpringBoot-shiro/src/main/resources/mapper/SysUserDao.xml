<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="xyz.onlytype.dao.SysUserDao">

    <resultMap type="xyz.onlytype.entity.SysUser" id="SysUserMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="isArticle" column="is_article" jdbcType="VARCHAR"/>
        <result property="username" column="username" jdbcType="VARCHAR"/>
        <result property="password" column="password" jdbcType="VARCHAR"/>
        <result property="isSalt" column="is_salt" jdbcType="VARCHAR"/>
        <result property="isImg" column="is_img" jdbcType="VARCHAR"/>
        <result property="isPermission" column="is_permission" jdbcType="INTEGER"/>
        <result property="isEnabled" column="is_enabled" jdbcType="INTEGER"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
    </resultMap>

    <!-- 批量插入 -->
    <insert id="insertBatch" keyProperty="id" useGeneratedKeys="true">
        insert into minio.sys_user(is_article, username, password, is_salt, is_img, is_permission, is_enabled, create_time, update_time)
        values
        <foreach collection="entities" item="entity" separator=",">
        (#{entity.isArticle}, #{entity.username}, #{entity.password}, #{entity.isSalt}, #{entity.isImg}, #{entity.isPermission}, #{entity.isEnabled}, #{entity.createTime}, #{entity.updateTime})
        </foreach>
    </insert>
    <!-- 批量插入或按主键更新 -->
    <insert id="insertOrUpdateBatch" keyProperty="id" useGeneratedKeys="true">
        insert into minio.sys_user(is_article, username, password, is_salt, is_img, is_permission, is_enabled, create_time, update_time)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.isArticle}, #{entity.username}, #{entity.password}, #{entity.isSalt}, #{entity.isImg}, #{entity.isPermission}, #{entity.isEnabled}, #{entity.createTime}, #{entity.updateTime})
        </foreach>
        on duplicate key update
         is_article = values(is_article) , username = values(username) , password = values(password) , is_salt = values(is_salt) , is_img = values(is_img) , is_permission = values(is_permission) , is_enabled = values(is_enabled) , create_time = values(create_time) , update_time = values(update_time)     </insert>

</mapper>

